name: Plan

on:
  pull_request_target:
  workflow_dispatch:

defaults:
  run:
    shell: bash

concurrency:
  group: plan-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    permissions:
      actions: read
      contents: read
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      workspaces: ${{ steps.workspaces.outputs.this }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Discover workspaces
        id: workspaces
        run: echo "::set-output name=this::$(ls github | jq --raw-input '[.[0:-4]]' | jq -sc add)"
      - name: Check last commit
        id: skip-lint
        run: |
          if [ "$(git log --oneline -n1)" == "*[skip lint]" ]; then
            echo "::set-output name=this::true"
          else
            echo "::set-output name=this::false"
          fi
  plan:
    needs: [prepare]
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        workspace: ${{ fromJson(needs.prepare.outputs.workspaces || '[]') }}
    name: Plan
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: 1
      TF_INPUT: 0
      TF_WORKSPACE: ${{ matrix.workspace }}
      AWS_ACCESS_KEY_ID: ${{ secrets.RO_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.RO_AWS_SECRET_ACCESS_KEY }}
      GITHUB_APP_ID: ${{ secrets.RO_GITHUB_APP_ID }}
      GITHUB_APP_INSTALLATION_ID: ${{ secrets[format('RO_GITHUB_APP_INSTALLATION_ID_{0}', matrix.workspace)] || secrets.RO_GITHUB_APP_INSTALLATION_ID }}
      GITHUB_APP_PEM_FILE: ${{ secrets.RO_GITHUB_APP_PEM_FILE }}
      TF_VAR_write_delay_ms: 300
    defaults:
      run:
        shell: bash
        working-directory: terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Setup terraform
        uses: hashicorp/setup-terraform@3d8debd658c92063839bc97da5c2427100420dec # v1.3.2
        with:
          terraform_version: 1.1.4
      - name: Initialize terraform
        run: terraform init
      - name: Check terraform lock
        if: github.event_name == 'workflow_run'
        run: git diff --exit-code .terraform.lock.hcl
      - name: Format terraform
        run: terraform fmt -check
      - name: Validate terraform
        run: terraform validate -no-color
      - name: Plan terraform
        id: plan
        run: terraform plan -refresh=false -lock=false -out=${{ env.TF_WORKSPACE }}.tfplan -no-color
      - name: Upload terraform plan
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TF_WORKSPACE }}_${{ github.event.pull_request.head.sha || github.sha }}.tfplan
          path: terraform/${{ env.TF_WORKSPACE }}.tfplan
          if-no-files-found: error
          retention-days: 90
  comment:
    needs: [prepare, plan]
    if: github.event_name == 'workflow_run'
    permissions:
      contents: read
      pull-requests: write
    name: Comment
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.RO_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.RO_AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        shell: bash
        working-directory: terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Setup terraform
        uses: hashicorp/setup-terraform@3d8debd658c92063839bc97da5c2427100420dec # v1.3.2
        with:
          terraform_version: 1.1.4
          terraform_wrapper: false
      - name: Initialize terraform
        run: terraform init
      - name: Download terraform plans
        uses: actions/download-artifact@v2
        with:
          path: terraform
      - name: Show terraform plans
        run: |
          for plan in $(find . -type f -name '*.tfplan'); do
            echo "<details><summary>$(basename "$plan" '.tfplan')</summary>" >> TERRAFORM_PLANS.md
            echo '' >> TERRAFORM_PLANS.md
            echo '```' >> TERRAFORM_PLANS.md
            echo "$(terraform show -no-color "$plan" 2>&1)" >> TERRAFORM_PLANS.md
            echo '```' >> TERRAFORM_PLANS.md
            echo '' >> TERRAFORM_PLANS.md
            echo '</details>' >> TERRAFORM_PLANS.md
          done
          cat TERRAFORM_PLANS.md
      - name: Prepare comment
        run: |
          echo 'COMMENT<<EOF' >> $GITHUB_ENV
          if [[ $(wc -c TERRAFORM_PLANS.md | cut -d' ' -f1) -ge 65000 ]]; then
            echo 'Terraform plans are too long to post as a comment. Please inspect [Plan > Comment > Show terraform plans](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) instead.' >> $GITHUB_ENV
          else
            cat TERRAFORM_PLANS.md >> $GITHUB_ENV
          fi
          echo 'EOF' >> $GITHUB_ENV
      - name: Comment on pull request
        uses: marocchino/sticky-pull-request-comment@39c5b5dc7717447d0cba270cd115037d32d28443 # v2.2.0
        with:
          number: ${{ github.event.pull_request.number }}
          message: |
            Before merge, verify that all the following plans are correct. They will be applied as-is after the merge.

            #### Terraform plans
            ${{ env.COMMENT }}
